fragment displayImageFields on Image {
  id
  downloadPath
}

fragment seasonEpisodes on Season {
  episodesBySeasonId(orderBy: INDEX_ASC) {
    edges {
      node {
        airTime
        id
        index
        jellyfinEpisodeId
        title
        downloadJobsByEpisodeId(first: 1, orderBy: CREATED_AT_DESC) {
          totalCount
          edges {
            node {
              status
              isFailed
            }
          }
        }
      }
    }
  }
}

fragment seasonConfigFields on Season {
  id
  infoSource
  isMonitoring
  jellyfinId
  mikanAnimeId
  jellyfinFolderId
  tags
  title
  tvdbId
  tvdbSeason
  weekday
  yearAndSemester
  airTime
  bangumiId
  bilibiliMainlandId
  bilibiliThmId
  createdAt
  description
  isArchived
  episodesSource
  downloadSourcesBySeasonId {
    edges {
      node {
        id
        pattern
      }
    }
  }
  poster: imageByPosterImageId {
    ...displayImageFields
  }
  banner: imageByBannerImageId {
    ...displayImageFields
  }
  fanart: imageByFanartImageId {
    ...displayImageFields
  }
  episodesLastSync
}

query GetSeasonByIdAll($id: Int!) {
  seasonById(id: $id) {
    ...seasonConfigFields
    ...seasonEpisodes
  }
}

query GetSeasonByIdConfigOnly($id: Int!) {
  seasonById(id: $id) {
    ...seasonConfigFields
  }
}

query GetSeasonByIdEpisodesOnly($id: Int!) {
  seasonById(id: $id) {
    ...seasonEpisodes
  }
}

mutation UpdateSeasonById($id: Int!, $seasonPatch: SeasonPatch!) {
  updateSeasonById(input: { id: $id, seasonPatch: $seasonPatch }) {
    __typename
  }
}

query GetSeasonByTitle($title: String!) {
  seasonByTitle(title: $title) {
    id
  }
}

mutation UpdateSeasonDownloadSources(
  $input: UpdateSeasonDownloadSourcesInput!
) {
  updateSeasonDownloadSources(input: $input)
}

query GetDownloadSourceByPattern($pattern: String!) {
  downloadSourceByPattern(pattern: $pattern) {
    id
  }
}

mutation SyncMetadata($seasonId: Int!) {
  syncMetadata(seasonId: $seasonId)
}

mutation SyncEpisodeData($seasonId: Int!) {
  syncEpisodeData(seasonId: $seasonId)
}

mutation DownloadTorrentForEpisode($episodeId: Int!, $torrentLink: String!) {
  downloadTorrentForEpisode(episodeId: $episodeId, torrentLink: $torrentLink)
}

query AllJellyfinFolders {
  allJellyfinFolders {
    edges {
      node {
        id
        location
        name
      }
    }
  }
}

mutation SyncJellyfinSeriesId($seasonId: Int!) {
  syncJellyfinSeriesId(seasonId: $seasonId)
}
