generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DownloadSources {
  id         Int       @id @default(autoincrement())
  seasonId   Int       @map("season_id")
  groupId    String    @default("") @map("group_id")
  pattern    String    @default("")
  isArchived Boolean   @default(false) @map("is_archived")
  archivedAt DateTime? @map("archived_at") @db.Timestamptz(6)
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  isDisabled Boolean   @default(false) @map("is_disabled")
  seasons    Seasons   @relation(fields: [seasonId], references: [id], onDelete: Cascade)

  @@map("download_sources")
}

model Episodes {
  id          Int       @id @default(autoincrement())
  seasonId    Int       @map("season_id")
  title       String    @default("")
  description String    @default("")
  index       Int
  airTime     DateTime? @map("air_time") @db.Timestamptz(6)
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  torrentId   Int?      @map("torrent_id")
  seasons     Seasons   @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  torrents    Torrents? @relation(fields: [torrentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
	@@map("episodes")
}

model Images {
  id        Int     @id @default(autoincrement())
  cosPath   String  @map("cos_path")
  sourceUrl String? @map("source_url")
	@@map("images")
}

model Seasons {
  id                 Int               @id @default(autoincrement())
  title              String            @default("")
  description        String            @default("")
  infoSource         MetadataSource   @default(MANUAL) @map("info_source")
  tags               String[]          @db.VarChar
  isArchived         Boolean           @default(false) @map("is_archived")
  createdAt          DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  archivedAt         DateTime?         @map("archived_at") @db.Timestamptz(6)
  bilibiliThmId      String            @default("") @map("bilibili_thm_id")
  bilibiliMainlandId String            @default("") @map("bilibili_mainland_id")
  bangumiId          String            @default("") @map("bangumi_id")
  mikanAnimeId       String            @default("") @map("mikan_anime_id")
  isMonitoring       Boolean           @default(true) @map("is_monitoring")
  yearAndSemester    String            @default("") @map("year_and_semester") @db.VarChar(16)
  weekday            Int?
  airTime            String            @default("") @map("air_time") @db.VarChar
  tvdbId             String            @default("") @map("tvdb_id")
  tvdbSeason         Int?              @map("tvdb_season")
  episodesSource     MetadataSource   @default(MANUAL) @map("episodes_source")
  download_sources   DownloadSources[]
  episodes           Episodes[]
	@@map("seasons")
}

model Torrents {
  id          Int        @id(map: "mikan_items_pkey") @default(autoincrement())
  title       String
  torrentLink String     @map("torrent_link")
  size        BigInt
  publishDate DateTime   @map("publish_date") @db.Timestamptz(6)
  hash        String     @unique
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  episodes    Episodes[]
	@@map("torrents")
}

enum DownloadStatus {
  UNAVAILABLE
  DOWNLOADING
  RENAMING
  WRITING_METADATA
  PLAYER_WAITING
  AVAILABLE
	@@map("download_status")
}

enum ImageType {
  POSTER
  BANNER
  FANART
	@@map("image_type")
}

enum MetadataSource {
  MANUAL
  BGM_CN
  SKYHOOK
  INHERIT
	@@map("metadata_source")
}

enum SeasonStatus {
  SCHEDULED
  AIRING
  ENDED
  UNKNOWN
	@@map("season_status")
}
