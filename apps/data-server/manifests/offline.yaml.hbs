apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-server
  namespace: lani-offline
  labels:
    app: data-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-server
  template:
    metadata:
      labels:
        app: data-server
    spec:
      containers:
      - name: data-server
        image: {{image}}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        resources:
          limits:
            memory: "100Mi"
            cpu: "500m"
          requests:
            memory: "10Mi"
            cpu: "10m"
        env:
        - name: NODE_ENV
          value: "offline"  
      imagePullSecrets:
      - name: ghcr-io-regcred
---
kind: Service
apiVersion: v1
metadata:
  name: data-server
  namespace: lani-offline
spec:
  selector:
    app: data-server
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: data-server-config
  namespace: lani-offline
data:
  config.yaml: >
    postgresUrl: "postgres://postgres:a*qLweVSC!4yRvBNP%405VGfyR@data-postgresql.postgres:5432/lani-offline"
    postgraphile:
      setofFunctionsContainNulls: true
      ignoreRBAC: true
      showErrorStack: json
      extendedErrors:
        - hint
        - detail
        - errcode
      graphiql: false
      enhanceGraphiql: false
      allowExplain: false
      watchPg: true