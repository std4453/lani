"""The root query type which gives access points into the data universe."""
type Query implements Node {
  """
  Exposes the root query type nested one level down. This is helpful for Relay 1
  which can only query top level fields if they are in a particular form.
  """
  query: Query!

  """
  The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.
  """
  nodeId: ID!

  """Fetches an object given its globally unique `ID`."""
  node(
    """The globally unique `ID`."""
    nodeId: ID!
  ): Node

  """Reads and enables pagination through a set of `AnimeMetadatum`."""
  allAnimeMetadata(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AnimeMetadatum`."""
    orderBy: [AnimeMetadataOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AnimeMetadatumCondition

    """
    Indicates whether archived items should be included in the results or not.
    """
    includeArchived: IncludeArchivedOption = NO

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AnimeMetadatumFilter
  ): AnimeMetadataConnection

  """Reads and enables pagination through a set of `DownloadConfig`."""
  allDownloadConfigs(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `DownloadConfig`."""
    orderBy: [DownloadConfigsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DownloadConfigCondition

    """
    Indicates whether archived items should be included in the results or not.
    """
    includeArchived: IncludeArchivedOption = NO

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DownloadConfigFilter
  ): DownloadConfigsConnection

  """Reads and enables pagination through a set of `SonarrSery`."""
  allSonarrSeries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `SonarrSery`."""
    orderBy: [SonarrSeriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SonarrSeryCondition

    """
    Indicates whether archived items should be included in the results or not.
    """
    includeArchived: IncludeArchivedOption = NO

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: SonarrSeryFilter
  ): SonarrSeriesConnection
  animeMetadatumById(id: Int!): AnimeMetadatum
  downloadConfigById(id: Int!): DownloadConfig
  sonarrSeryById(id: Int!): SonarrSery
  sonarrSeryBySonarrId(sonarrId: Int!): SonarrSery
  sonarrSeryBySonarrSlug(sonarrSlug: String!): SonarrSery

  """Reads a single `AnimeMetadatum` using its globally unique `ID`."""
  animeMetadatum(
    """
    The globally unique `ID` to be used in selecting a single `AnimeMetadatum`.
    """
    nodeId: ID!
  ): AnimeMetadatum

  """Reads a single `DownloadConfig` using its globally unique `ID`."""
  downloadConfig(
    """
    The globally unique `ID` to be used in selecting a single `DownloadConfig`.
    """
    nodeId: ID!
  ): DownloadConfig

  """Reads a single `SonarrSery` using its globally unique `ID`."""
  sonarrSery(
    """
    The globally unique `ID` to be used in selecting a single `SonarrSery`.
    """
    nodeId: ID!
  ): SonarrSery
}

"""An object with a globally unique `ID`."""
interface Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

"""A connection to a list of `AnimeMetadatum` values."""
type AnimeMetadataConnection {
  """A list of `AnimeMetadatum` objects."""
  nodes: [AnimeMetadatum]!

  """
  A list of edges which contains the `AnimeMetadatum` and cursor to aid in pagination.
  """
  edges: [AnimeMetadataEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AnimeMetadatum` you could get from the connection."""
  totalCount: Int!
}

type AnimeMetadatum implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!

  """https://std-4453.feishu.cn/wiki/wikcnPbNZAT9OhTAJwp2WALnJld"""
  uniformName: String!

  """sonarr seasonNumber, usually 1-based, 0 is used for OAD"""
  sonarrSeason: Int
  jellyfinSeasonId: String!
  schedule: JSON
  sonarrSeries: Int
  mikanAnimeId: String!
  bangumiId: String!
  bilibiliMainlandSsid: String!
  bilibiliThmSsid: String!
  isArchived: Boolean!
  season: SeasonEnum
  year: Int

  """Reads a single `SonarrSery` that is related to this `AnimeMetadatum`."""
  sonarrSeryBySonarrSeries: SonarrSery

  """Reads and enables pagination through a set of `DownloadConfig`."""
  downloadConfigsByAnime(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `DownloadConfig`."""
    orderBy: [DownloadConfigsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DownloadConfigCondition

    """
    Indicates whether archived items should be included in the results or not.
    """
    includeArchived: IncludeArchivedOption = INHERIT

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DownloadConfigFilter
  ): DownloadConfigsConnection!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

enum SeasonEnum {
  SPRING
  SUMMER
  AUTUMN
  WINTER
}

type SonarrSery implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  sonarrId: Int!
  sonarrSlug: String!
  tvdbid: Int!
  isArchived: Boolean!

  """Reads and enables pagination through a set of `AnimeMetadatum`."""
  animeMetadataBySonarrSeries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AnimeMetadatum`."""
    orderBy: [AnimeMetadataOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AnimeMetadatumCondition

    """
    Indicates whether archived items should be included in the results or not.
    """
    includeArchived: IncludeArchivedOption = INHERIT

    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AnimeMetadatumFilter
  ): AnimeMetadataConnection!
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""Methods to use when ordering `AnimeMetadatum`."""
enum AnimeMetadataOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  UNIFORM_NAME_ASC
  UNIFORM_NAME_DESC
  SONARR_SEASON_ASC
  SONARR_SEASON_DESC
  JELLYFIN_SEASON_ID_ASC
  JELLYFIN_SEASON_ID_DESC
  SCHEDULE_ASC
  SCHEDULE_DESC
  SONARR_SERIES_ASC
  SONARR_SERIES_DESC
  MIKAN_ANIME_ID_ASC
  MIKAN_ANIME_ID_DESC
  BANGUMI_ID_ASC
  BANGUMI_ID_DESC
  BILIBILI_MAINLAND_SSID_ASC
  BILIBILI_MAINLAND_SSID_DESC
  BILIBILI_THM_SSID_ASC
  BILIBILI_THM_SSID_DESC
  IS_ARCHIVED_ASC
  IS_ARCHIVED_DESC
  SEASON_ASC
  SEASON_DESC
  YEAR_ASC
  YEAR_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AnimeMetadatum` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AnimeMetadatumCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `uniformName` field."""
  uniformName: String

  """Checks for equality with the object’s `sonarrSeason` field."""
  sonarrSeason: Int

  """Checks for equality with the object’s `jellyfinSeasonId` field."""
  jellyfinSeasonId: String

  """Checks for equality with the object’s `schedule` field."""
  schedule: JSON

  """Checks for equality with the object’s `sonarrSeries` field."""
  sonarrSeries: Int

  """Checks for equality with the object’s `mikanAnimeId` field."""
  mikanAnimeId: String

  """Checks for equality with the object’s `bangumiId` field."""
  bangumiId: String

  """Checks for equality with the object’s `bilibiliMainlandSsid` field."""
  bilibiliMainlandSsid: String

  """Checks for equality with the object’s `bilibiliThmSsid` field."""
  bilibiliThmSsid: String

  """Checks for equality with the object’s `isArchived` field."""
  isArchived: Boolean

  """Checks for equality with the object’s `season` field."""
  season: SeasonEnum

  """Checks for equality with the object’s `year` field."""
  year: Int
}

"""
Indicates whether archived items should be included in the results or not.
"""
enum IncludeArchivedOption {
  """Exclude archived items."""
  NO

  """Include archived items."""
  YES

  """Only include archived items (i.e. exclude non-archived items)."""
  EXCLUSIVELY

  """
  If there is a parent GraphQL record and it is archived then this is equivalent to YES, in all other cases this is equivalent to NO.
  """
  INHERIT
}

"""
A filter to be used against `AnimeMetadatum` object types. All fields are combined with a logical ‘and.’
"""
input AnimeMetadatumFilter {
  """Filter by the object’s `id` field."""
  id: IntFilter

  """Filter by the object’s `uniformName` field."""
  uniformName: StringFilter

  """Filter by the object’s `sonarrSeason` field."""
  sonarrSeason: IntFilter

  """Filter by the object’s `jellyfinSeasonId` field."""
  jellyfinSeasonId: StringFilter

  """Filter by the object’s `sonarrSeries` field."""
  sonarrSeries: IntFilter

  """Filter by the object’s `mikanAnimeId` field."""
  mikanAnimeId: StringFilter

  """Filter by the object’s `bangumiId` field."""
  bangumiId: StringFilter

  """Filter by the object’s `bilibiliMainlandSsid` field."""
  bilibiliMainlandSsid: StringFilter

  """Filter by the object’s `bilibiliThmSsid` field."""
  bilibiliThmSsid: StringFilter

  """Filter by the object’s `isArchived` field."""
  isArchived: BooleanFilter

  """Filter by the object’s `season` field."""
  season: SeasonEnumFilter

  """Filter by the object’s `year` field."""
  year: IntFilter

  """Checks for all expressions in this list."""
  and: [AnimeMetadatumFilter!]

  """Checks for any expressions in this list."""
  or: [AnimeMetadatumFilter!]

  """Negates the expression."""
  not: AnimeMetadatumFilter
}

"""
A filter to be used against Int fields. All fields are combined with a logical ‘and.’
"""
input IntFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: Int

  """Not equal to the specified value."""
  notEqualTo: Int

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Int

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Int

  """Included in the specified list."""
  in: [Int!]

  """Not included in the specified list."""
  notIn: [Int!]

  """Less than the specified value."""
  lessThan: Int

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Int

  """Greater than the specified value."""
  greaterThan: Int

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Int
}

"""
A filter to be used against String fields. All fields are combined with a logical ‘and.’
"""
input StringFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: String

  """Not equal to the specified value."""
  notEqualTo: String

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: String

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: String

  """Included in the specified list."""
  in: [String!]

  """Not included in the specified list."""
  notIn: [String!]

  """Less than the specified value."""
  lessThan: String

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: String

  """Greater than the specified value."""
  greaterThan: String

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: String

  """Contains the specified string (case-sensitive)."""
  includes: String

  """Does not contain the specified string (case-sensitive)."""
  notIncludes: String

  """Contains the specified string (case-insensitive)."""
  includesInsensitive: String

  """Does not contain the specified string (case-insensitive)."""
  notIncludesInsensitive: String

  """Starts with the specified string (case-sensitive)."""
  startsWith: String

  """Does not start with the specified string (case-sensitive)."""
  notStartsWith: String

  """Starts with the specified string (case-insensitive)."""
  startsWithInsensitive: String

  """Does not start with the specified string (case-insensitive)."""
  notStartsWithInsensitive: String

  """Ends with the specified string (case-sensitive)."""
  endsWith: String

  """Does not end with the specified string (case-sensitive)."""
  notEndsWith: String

  """Ends with the specified string (case-insensitive)."""
  endsWithInsensitive: String

  """Does not end with the specified string (case-insensitive)."""
  notEndsWithInsensitive: String

  """
  Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  like: String

  """
  Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  notLike: String

  """
  Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  likeInsensitive: String

  """
  Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  notLikeInsensitive: String

  """Equal to the specified value (case-insensitive)."""
  equalToInsensitive: String

  """Not equal to the specified value (case-insensitive)."""
  notEqualToInsensitive: String

  """
  Not equal to the specified value, treating null like an ordinary value (case-insensitive).
  """
  distinctFromInsensitive: String

  """
  Equal to the specified value, treating null like an ordinary value (case-insensitive).
  """
  notDistinctFromInsensitive: String

  """Included in the specified list (case-insensitive)."""
  inInsensitive: [String!]

  """Not included in the specified list (case-insensitive)."""
  notInInsensitive: [String!]

  """Less than the specified value (case-insensitive)."""
  lessThanInsensitive: String

  """Less than or equal to the specified value (case-insensitive)."""
  lessThanOrEqualToInsensitive: String

  """Greater than the specified value (case-insensitive)."""
  greaterThanInsensitive: String

  """Greater than or equal to the specified value (case-insensitive)."""
  greaterThanOrEqualToInsensitive: String
}

"""
A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’
"""
input BooleanFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: Boolean

  """Not equal to the specified value."""
  notEqualTo: Boolean

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Boolean

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Boolean

  """Included in the specified list."""
  in: [Boolean!]

  """Not included in the specified list."""
  notIn: [Boolean!]

  """Less than the specified value."""
  lessThan: Boolean

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Boolean

  """Greater than the specified value."""
  greaterThan: Boolean

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Boolean
}

"""
A filter to be used against SeasonEnum fields. All fields are combined with a logical ‘and.’
"""
input SeasonEnumFilter {
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean

  """Equal to the specified value."""
  equalTo: SeasonEnum

  """Not equal to the specified value."""
  notEqualTo: SeasonEnum

  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: SeasonEnum

  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: SeasonEnum

  """Included in the specified list."""
  in: [SeasonEnum!]

  """Not included in the specified list."""
  notIn: [SeasonEnum!]

  """Less than the specified value."""
  lessThan: SeasonEnum

  """Less than or equal to the specified value."""
  lessThanOrEqualTo: SeasonEnum

  """Greater than the specified value."""
  greaterThan: SeasonEnum

  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: SeasonEnum
}

"""A connection to a list of `DownloadConfig` values."""
type DownloadConfigsConnection {
  """A list of `DownloadConfig` objects."""
  nodes: [DownloadConfig]!

  """
  A list of edges which contains the `DownloadConfig` and cursor to aid in pagination.
  """
  edges: [DownloadConfigsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `DownloadConfig` you could get from the connection."""
  totalCount: Int!
}

type DownloadConfig implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: Int!
  anime: Int!
  pattern: String!
  language: String!
  quality: Int!
  type: String!

  """mikan anime publish group id"""
  publishGroupId: String!

  """mikan anime bangumi ID"""
  bangumiId: String!
  isArchived: Boolean!

  """
  Reads a single `AnimeMetadatum` that is related to this `DownloadConfig`.
  """
  animeMetadatumByAnime: AnimeMetadatum
}

"""A `DownloadConfig` edge in the connection."""
type DownloadConfigsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `DownloadConfig` at the end of the edge."""
  node: DownloadConfig
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor

  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

"""Methods to use when ordering `DownloadConfig`."""
enum DownloadConfigsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ANIME_ASC
  ANIME_DESC
  PATTERN_ASC
  PATTERN_DESC
  LANGUAGE_ASC
  LANGUAGE_DESC
  QUALITY_ASC
  QUALITY_DESC
  TYPE_ASC
  TYPE_DESC
  PUBLISH_GROUP_ID_ASC
  PUBLISH_GROUP_ID_DESC
  BANGUMI_ID_ASC
  BANGUMI_ID_DESC
  IS_ARCHIVED_ASC
  IS_ARCHIVED_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `DownloadConfig` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input DownloadConfigCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `anime` field."""
  anime: Int

  """Checks for equality with the object’s `pattern` field."""
  pattern: String

  """Checks for equality with the object’s `language` field."""
  language: String

  """Checks for equality with the object’s `quality` field."""
  quality: Int

  """Checks for equality with the object’s `type` field."""
  type: String

  """Checks for equality with the object’s `publishGroupId` field."""
  publishGroupId: String

  """Checks for equality with the object’s `bangumiId` field."""
  bangumiId: String

  """Checks for equality with the object’s `isArchived` field."""
  isArchived: Boolean
}

"""
A filter to be used against `DownloadConfig` object types. All fields are combined with a logical ‘and.’
"""
input DownloadConfigFilter {
  """Filter by the object’s `id` field."""
  id: IntFilter

  """Filter by the object’s `anime` field."""
  anime: IntFilter

  """Filter by the object’s `pattern` field."""
  pattern: StringFilter

  """Filter by the object’s `language` field."""
  language: StringFilter

  """Filter by the object’s `quality` field."""
  quality: IntFilter

  """Filter by the object’s `type` field."""
  type: StringFilter

  """Filter by the object’s `publishGroupId` field."""
  publishGroupId: StringFilter

  """Filter by the object’s `bangumiId` field."""
  bangumiId: StringFilter

  """Filter by the object’s `isArchived` field."""
  isArchived: BooleanFilter

  """Checks for all expressions in this list."""
  and: [DownloadConfigFilter!]

  """Checks for any expressions in this list."""
  or: [DownloadConfigFilter!]

  """Negates the expression."""
  not: DownloadConfigFilter
}

"""A `AnimeMetadatum` edge in the connection."""
type AnimeMetadataEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AnimeMetadatum` at the end of the edge."""
  node: AnimeMetadatum
}

"""A connection to a list of `SonarrSery` values."""
type SonarrSeriesConnection {
  """A list of `SonarrSery` objects."""
  nodes: [SonarrSery]!

  """
  A list of edges which contains the `SonarrSery` and cursor to aid in pagination.
  """
  edges: [SonarrSeriesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `SonarrSery` you could get from the connection."""
  totalCount: Int!
}

"""A `SonarrSery` edge in the connection."""
type SonarrSeriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `SonarrSery` at the end of the edge."""
  node: SonarrSery
}

"""Methods to use when ordering `SonarrSery`."""
enum SonarrSeriesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  SONARR_ID_ASC
  SONARR_ID_DESC
  SONARR_SLUG_ASC
  SONARR_SLUG_DESC
  TVDBID_ASC
  TVDBID_DESC
  IS_ARCHIVED_ASC
  IS_ARCHIVED_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `SonarrSery` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input SonarrSeryCondition {
  """Checks for equality with the object’s `id` field."""
  id: Int

  """Checks for equality with the object’s `sonarrId` field."""
  sonarrId: Int

  """Checks for equality with the object’s `sonarrSlug` field."""
  sonarrSlug: String

  """Checks for equality with the object’s `tvdbid` field."""
  tvdbid: Int

  """Checks for equality with the object’s `isArchived` field."""
  isArchived: Boolean
}

"""
A filter to be used against `SonarrSery` object types. All fields are combined with a logical ‘and.’
"""
input SonarrSeryFilter {
  """Filter by the object’s `id` field."""
  id: IntFilter

  """Filter by the object’s `sonarrId` field."""
  sonarrId: IntFilter

  """Filter by the object’s `sonarrSlug` field."""
  sonarrSlug: StringFilter

  """Filter by the object’s `tvdbid` field."""
  tvdbid: IntFilter

  """Filter by the object’s `isArchived` field."""
  isArchived: BooleanFilter

  """Checks for all expressions in this list."""
  and: [SonarrSeryFilter!]

  """Checks for any expressions in this list."""
  or: [SonarrSeryFilter!]

  """Negates the expression."""
  not: SonarrSeryFilter
}

"""
The root mutation type which contains root level fields which mutate data.
"""
type Mutation {
  """Creates a single `AnimeMetadatum`."""
  createAnimeMetadatum(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAnimeMetadatumInput!
  ): CreateAnimeMetadatumPayload

  """Creates a single `DownloadConfig`."""
  createDownloadConfig(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDownloadConfigInput!
  ): CreateDownloadConfigPayload

  """Creates a single `SonarrSery`."""
  createSonarrSery(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSonarrSeryInput!
  ): CreateSonarrSeryPayload

  """
  Updates a single `AnimeMetadatum` using its globally unique id and a patch.
  """
  updateAnimeMetadatum(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAnimeMetadatumInput!
  ): UpdateAnimeMetadatumPayload

  """Updates a single `AnimeMetadatum` using a unique key and a patch."""
  updateAnimeMetadatumById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAnimeMetadatumByIdInput!
  ): UpdateAnimeMetadatumPayload

  """
  Updates a single `DownloadConfig` using its globally unique id and a patch.
  """
  updateDownloadConfig(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDownloadConfigInput!
  ): UpdateDownloadConfigPayload

  """Updates a single `DownloadConfig` using a unique key and a patch."""
  updateDownloadConfigById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDownloadConfigByIdInput!
  ): UpdateDownloadConfigPayload

  """
  Updates a single `SonarrSery` using its globally unique id and a patch.
  """
  updateSonarrSery(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSonarrSeryInput!
  ): UpdateSonarrSeryPayload

  """Updates a single `SonarrSery` using a unique key and a patch."""
  updateSonarrSeryById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSonarrSeryByIdInput!
  ): UpdateSonarrSeryPayload

  """Updates a single `SonarrSery` using a unique key and a patch."""
  updateSonarrSeryBySonarrId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSonarrSeryBySonarrIdInput!
  ): UpdateSonarrSeryPayload

  """Updates a single `SonarrSery` using a unique key and a patch."""
  updateSonarrSeryBySonarrSlug(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSonarrSeryBySonarrSlugInput!
  ): UpdateSonarrSeryPayload

  """Deletes a single `AnimeMetadatum` using its globally unique id."""
  deleteAnimeMetadatum(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAnimeMetadatumInput!
  ): DeleteAnimeMetadatumPayload

  """Deletes a single `AnimeMetadatum` using a unique key."""
  deleteAnimeMetadatumById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAnimeMetadatumByIdInput!
  ): DeleteAnimeMetadatumPayload

  """Deletes a single `DownloadConfig` using its globally unique id."""
  deleteDownloadConfig(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDownloadConfigInput!
  ): DeleteDownloadConfigPayload

  """Deletes a single `DownloadConfig` using a unique key."""
  deleteDownloadConfigById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDownloadConfigByIdInput!
  ): DeleteDownloadConfigPayload

  """Deletes a single `SonarrSery` using its globally unique id."""
  deleteSonarrSery(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSonarrSeryInput!
  ): DeleteSonarrSeryPayload

  """Deletes a single `SonarrSery` using a unique key."""
  deleteSonarrSeryById(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSonarrSeryByIdInput!
  ): DeleteSonarrSeryPayload

  """Deletes a single `SonarrSery` using a unique key."""
  deleteSonarrSeryBySonarrId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSonarrSeryBySonarrIdInput!
  ): DeleteSonarrSeryPayload

  """Deletes a single `SonarrSery` using a unique key."""
  deleteSonarrSeryBySonarrSlug(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSonarrSeryBySonarrSlugInput!
  ): DeleteSonarrSeryPayload
}

"""The output of our create `AnimeMetadatum` mutation."""
type CreateAnimeMetadatumPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AnimeMetadatum` that was created by this mutation."""
  animeMetadatum: AnimeMetadatum

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `SonarrSery` that is related to this `AnimeMetadatum`."""
  sonarrSeryBySonarrSeries: SonarrSery

  """An edge for our `AnimeMetadatum`. May be used by Relay 1."""
  animeMetadatumEdge(
    """The method to use when ordering `AnimeMetadatum`."""
    orderBy: [AnimeMetadataOrderBy!] = [PRIMARY_KEY_ASC]
  ): AnimeMetadataEdge
}

"""All input for the create `AnimeMetadatum` mutation."""
input CreateAnimeMetadatumInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AnimeMetadatum` to be created by this mutation."""
  animeMetadatum: AnimeMetadatumInput!
}

"""An input for mutations affecting `AnimeMetadatum`"""
input AnimeMetadatumInput {
  id: Int

  """https://std-4453.feishu.cn/wiki/wikcnPbNZAT9OhTAJwp2WALnJld"""
  uniformName: String!

  """sonarr seasonNumber, usually 1-based, 0 is used for OAD"""
  sonarrSeason: Int
  jellyfinSeasonId: String
  schedule: JSON
  sonarrSeries: Int
  mikanAnimeId: String
  bangumiId: String
  bilibiliMainlandSsid: String
  bilibiliThmSsid: String
  isArchived: Boolean
  season: SeasonEnum
  year: Int
}

"""The output of our create `DownloadConfig` mutation."""
type CreateDownloadConfigPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `DownloadConfig` that was created by this mutation."""
  downloadConfig: DownloadConfig

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AnimeMetadatum` that is related to this `DownloadConfig`.
  """
  animeMetadatumByAnime: AnimeMetadatum

  """An edge for our `DownloadConfig`. May be used by Relay 1."""
  downloadConfigEdge(
    """The method to use when ordering `DownloadConfig`."""
    orderBy: [DownloadConfigsOrderBy!] = [PRIMARY_KEY_ASC]
  ): DownloadConfigsEdge
}

"""All input for the create `DownloadConfig` mutation."""
input CreateDownloadConfigInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `DownloadConfig` to be created by this mutation."""
  downloadConfig: DownloadConfigInput!
}

"""An input for mutations affecting `DownloadConfig`"""
input DownloadConfigInput {
  id: Int
  anime: Int!
  pattern: String
  language: String!
  quality: Int!
  type: String

  """mikan anime publish group id"""
  publishGroupId: String

  """mikan anime bangumi ID"""
  bangumiId: String
  isArchived: Boolean
}

"""The output of our create `SonarrSery` mutation."""
type CreateSonarrSeryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `SonarrSery` that was created by this mutation."""
  sonarrSery: SonarrSery

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `SonarrSery`. May be used by Relay 1."""
  sonarrSeryEdge(
    """The method to use when ordering `SonarrSery`."""
    orderBy: [SonarrSeriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SonarrSeriesEdge
}

"""All input for the create `SonarrSery` mutation."""
input CreateSonarrSeryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `SonarrSery` to be created by this mutation."""
  sonarrSery: SonarrSeryInput!
}

"""An input for mutations affecting `SonarrSery`"""
input SonarrSeryInput {
  id: Int
  sonarrId: Int!
  sonarrSlug: String!
  tvdbid: Int!
  isArchived: Boolean
}

"""The output of our update `AnimeMetadatum` mutation."""
type UpdateAnimeMetadatumPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AnimeMetadatum` that was updated by this mutation."""
  animeMetadatum: AnimeMetadatum

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `SonarrSery` that is related to this `AnimeMetadatum`."""
  sonarrSeryBySonarrSeries: SonarrSery

  """An edge for our `AnimeMetadatum`. May be used by Relay 1."""
  animeMetadatumEdge(
    """The method to use when ordering `AnimeMetadatum`."""
    orderBy: [AnimeMetadataOrderBy!] = [PRIMARY_KEY_ASC]
  ): AnimeMetadataEdge
}

"""All input for the `updateAnimeMetadatum` mutation."""
input UpdateAnimeMetadatumInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AnimeMetadatum` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AnimeMetadatum` being updated.
  """
  animeMetadatumPatch: AnimeMetadatumPatch!
}

"""
Represents an update to a `AnimeMetadatum`. Fields that are set will be updated.
"""
input AnimeMetadatumPatch {
  id: Int

  """https://std-4453.feishu.cn/wiki/wikcnPbNZAT9OhTAJwp2WALnJld"""
  uniformName: String

  """sonarr seasonNumber, usually 1-based, 0 is used for OAD"""
  sonarrSeason: Int
  jellyfinSeasonId: String
  schedule: JSON
  sonarrSeries: Int
  mikanAnimeId: String
  bangumiId: String
  bilibiliMainlandSsid: String
  bilibiliThmSsid: String
  isArchived: Boolean
  season: SeasonEnum
  year: Int
}

"""All input for the `updateAnimeMetadatumById` mutation."""
input UpdateAnimeMetadatumByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AnimeMetadatum` being updated.
  """
  animeMetadatumPatch: AnimeMetadatumPatch!
  id: Int!
}

"""The output of our update `DownloadConfig` mutation."""
type UpdateDownloadConfigPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `DownloadConfig` that was updated by this mutation."""
  downloadConfig: DownloadConfig

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AnimeMetadatum` that is related to this `DownloadConfig`.
  """
  animeMetadatumByAnime: AnimeMetadatum

  """An edge for our `DownloadConfig`. May be used by Relay 1."""
  downloadConfigEdge(
    """The method to use when ordering `DownloadConfig`."""
    orderBy: [DownloadConfigsOrderBy!] = [PRIMARY_KEY_ASC]
  ): DownloadConfigsEdge
}

"""All input for the `updateDownloadConfig` mutation."""
input UpdateDownloadConfigInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `DownloadConfig` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `DownloadConfig` being updated.
  """
  downloadConfigPatch: DownloadConfigPatch!
}

"""
Represents an update to a `DownloadConfig`. Fields that are set will be updated.
"""
input DownloadConfigPatch {
  id: Int
  anime: Int
  pattern: String
  language: String
  quality: Int
  type: String

  """mikan anime publish group id"""
  publishGroupId: String

  """mikan anime bangumi ID"""
  bangumiId: String
  isArchived: Boolean
}

"""All input for the `updateDownloadConfigById` mutation."""
input UpdateDownloadConfigByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `DownloadConfig` being updated.
  """
  downloadConfigPatch: DownloadConfigPatch!
  id: Int!
}

"""The output of our update `SonarrSery` mutation."""
type UpdateSonarrSeryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `SonarrSery` that was updated by this mutation."""
  sonarrSery: SonarrSery

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `SonarrSery`. May be used by Relay 1."""
  sonarrSeryEdge(
    """The method to use when ordering `SonarrSery`."""
    orderBy: [SonarrSeriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SonarrSeriesEdge
}

"""All input for the `updateSonarrSery` mutation."""
input UpdateSonarrSeryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `SonarrSery` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `SonarrSery` being updated.
  """
  sonarrSeryPatch: SonarrSeryPatch!
}

"""
Represents an update to a `SonarrSery`. Fields that are set will be updated.
"""
input SonarrSeryPatch {
  id: Int
  sonarrId: Int
  sonarrSlug: String
  tvdbid: Int
  isArchived: Boolean
}

"""All input for the `updateSonarrSeryById` mutation."""
input UpdateSonarrSeryByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `SonarrSery` being updated.
  """
  sonarrSeryPatch: SonarrSeryPatch!
  id: Int!
}

"""All input for the `updateSonarrSeryBySonarrId` mutation."""
input UpdateSonarrSeryBySonarrIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `SonarrSery` being updated.
  """
  sonarrSeryPatch: SonarrSeryPatch!
  sonarrId: Int!
}

"""All input for the `updateSonarrSeryBySonarrSlug` mutation."""
input UpdateSonarrSeryBySonarrSlugInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `SonarrSery` being updated.
  """
  sonarrSeryPatch: SonarrSeryPatch!
  sonarrSlug: String!
}

"""The output of our delete `AnimeMetadatum` mutation."""
type DeleteAnimeMetadatumPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AnimeMetadatum` that was deleted by this mutation."""
  animeMetadatum: AnimeMetadatum
  deletedAnimeMetadatumId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `SonarrSery` that is related to this `AnimeMetadatum`."""
  sonarrSeryBySonarrSeries: SonarrSery

  """An edge for our `AnimeMetadatum`. May be used by Relay 1."""
  animeMetadatumEdge(
    """The method to use when ordering `AnimeMetadatum`."""
    orderBy: [AnimeMetadataOrderBy!] = [PRIMARY_KEY_ASC]
  ): AnimeMetadataEdge
}

"""All input for the `deleteAnimeMetadatum` mutation."""
input DeleteAnimeMetadatumInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AnimeMetadatum` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAnimeMetadatumById` mutation."""
input DeleteAnimeMetadatumByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `DownloadConfig` mutation."""
type DeleteDownloadConfigPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `DownloadConfig` that was deleted by this mutation."""
  downloadConfig: DownloadConfig
  deletedDownloadConfigId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AnimeMetadatum` that is related to this `DownloadConfig`.
  """
  animeMetadatumByAnime: AnimeMetadatum

  """An edge for our `DownloadConfig`. May be used by Relay 1."""
  downloadConfigEdge(
    """The method to use when ordering `DownloadConfig`."""
    orderBy: [DownloadConfigsOrderBy!] = [PRIMARY_KEY_ASC]
  ): DownloadConfigsEdge
}

"""All input for the `deleteDownloadConfig` mutation."""
input DeleteDownloadConfigInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `DownloadConfig` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteDownloadConfigById` mutation."""
input DeleteDownloadConfigByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""The output of our delete `SonarrSery` mutation."""
type DeleteSonarrSeryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `SonarrSery` that was deleted by this mutation."""
  sonarrSery: SonarrSery
  deletedSonarrSeryId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `SonarrSery`. May be used by Relay 1."""
  sonarrSeryEdge(
    """The method to use when ordering `SonarrSery`."""
    orderBy: [SonarrSeriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): SonarrSeriesEdge
}

"""All input for the `deleteSonarrSery` mutation."""
input DeleteSonarrSeryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `SonarrSery` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSonarrSeryById` mutation."""
input DeleteSonarrSeryByIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: Int!
}

"""All input for the `deleteSonarrSeryBySonarrId` mutation."""
input DeleteSonarrSeryBySonarrIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  sonarrId: Int!
}

"""All input for the `deleteSonarrSeryBySonarrSlug` mutation."""
input DeleteSonarrSeryBySonarrSlugInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  sonarrSlug: String!
}
