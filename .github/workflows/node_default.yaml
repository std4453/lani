name: "Default Node.js CI"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Ref to trigger workflow"
        required: false
        default: "master"
      image_name:
        description: "Image name"
        required: true
      image_owner:
        description: "Image owner"
        required: false
        default: "std4453"
      project_name:
        description: "Project package name"
        required: true
      project_path:
        description: "Project path"
        required: true
      deploy_env:
        description: "Deploy environment type"
        required: false

jobs:
  build:
    name: ${{ github.event.inputs.project_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.inputs.ref }}

      - uses: docker/setup-buildx-action@v1
        name: Setup Docker Buildx

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v2
        name: Setup Node
        with:
          node-version: "14"

      # https://github.com/microsoft/rushstack/issues/1847#issuecomment-993825253

      - name: Cache Rush
        uses: actions/cache@v2
        with:
          path: |
            common/temp/install-run
          key: ${{ runner.os }}-${{ hashFiles('rush.json') }}

      - name: Cache pnpm
        uses: actions/cache@v2
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: |
          node common/scripts/install-run-rush.js install --no-link

      - name: Link Dependencies
        run: |
          node common/scripts/install-run-rush.js link

      - name: Build
        run: |
          node common/scripts/install-run-rush.js build -t ${{ github.event.inputs.project_name }} -p 1 -v

      - name: Rush Deploy
        run: |
          node common/scripts/install-run-rush.js deploy -p ${{ github.event.inputs.project_name }}

      # https://github.community/t/syntax-for-replacing-characters-in-string/17240
      - name: Escape Ref
        id: escape_ref
        run: |
          ref_escaped="${ref_raw////-}"
          echo "::set-output name=ref_escaped::$ref_escaped"
        env:
          ref_raw: ${{ github.event.inputs.ref }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./${{ github.event.inputs.project_path }}/Dockerfile
          tags: >
            ghcr.io/${{ github.event.inputs.image_owner }}/${{ github.event.inputs.image_name }}:latest,
            ghcr.io/${{ github.event.inputs.image_owner }}/${{ github.event.inputs.image_name }}:1.0.${{ github.run_number }},
            ghcr.io/${{ github.event.inputs.image_owner }}/${{ github.event.inputs.image_name }}:${{ github.sha }},
            ghcr.io/${{ github.event.inputs.image_owner }}/${{ github.event.inputs.image_name }}:${{ steps.escape_ref.outputs.ref_escaped }}

      - name: Generate Manifests
        if: github.event.inputs.deploy_env != null
        run: >
          node common/scripts/install-run-rush.js manifest
          -o ${{ github.event.inputs.project_name }}
          --image ghcr.io/${{ github.event.inputs.image_owner }}/${{ github.event.inputs.image_name }}:1.0.${{ github.run_number }}
          --env ${{ github.event.inputs.deploy_env }}

      - name: Prepare kubeconfig
        if: github.event.inputs.deploy_env != null
        run: |
          echo "KUBE_CONFIG=$(cat deploy/kust/lani-cd.kubeconfig | base64 -w 0)" >> $GITHUB_ENV

      - uses: actions-hub/kubectl@master
        if: github.event.inputs.deploy_env != null
        name: Apply manifest
        env:
          KUBE_CONFIG: ${{ env.KUBE_CONFIG }}
        with:
          args: apply -f ./${{ github.event.inputs.project_path }}/manifests/${{ github.event.inputs.deploy_env }}.yaml
